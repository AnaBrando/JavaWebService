package br.edu.ifms.service;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.client.Invocation;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.Response;

import br.edu.ifms.entity.Livro;
import br.edu.ifms.entity.Livros;

public class ServiceClient {
	
	private Client client;
	
	private WebTarget webTarget;
	
	final String URL_SERVICE = "http://localhost:8080/WebServiceRest/rest/service/";
	
	public ServiceClient() {
		this.client = ClientBuilder.newClient();
	}
	
	public String CadastrarLivro(Livro livro) {
		this.webTarget = this.client.target(URL_SERVICE).path("cadastrar");
		
		Invocation.Builder invocationBuilder = this.webTarget.request("application/json;charset=UTF-8");
		
		Response response = invocationBuilder.post(Entity.entity(livro, "application/json;charset=UTF-8"));
		
		return response.readEntity(String.class);
	}
	
	public String AlterarLivro(Livro livro) {
		this.webTarget = this.client.target(URL_SERVICE).path("alterar");
		
		Invocation.Builder invocationBuilder = 
				this.webTarget.request("application/json;charset=UTF-8");
		Response response = 
				invocationBuilder.put(Entity.entity(livro, "application/json;charset=UTF-8"));
		
		return response.readEntity(String.class);	
	}
	
	public 	Livros ConsultarTodosLivros() {
		this.webTarget = this.client.target(URL_SERVICE).path("todosLivros");
		
		Invocation.Builder invocationBuilder = 
				this.webTarget.request("application/json;charset=UTF-8");
		Response response = 
				invocationBuilder.get();
		
		return response.readEntity(Livros.class);
	}
	
	public Livro ConsultarLivroPorCodigo(int codigo) {
		
		this.webTarget = this.client.target(URL_SERVICE).
				path("getLivro").path(String.valueOf(codigo));
		
		Invocation.Builder invocationBuilder = 
				this.webTarget.request("application/json;charset=UTF-8");
		Response response = 
				invocationBuilder.get();
		
		return response.readEntity(Livro.class);
	}
	
	public String ExcluirLivroPorCodigo(int codigo) {
		
		this.webTarget = this.client.target(URL_SERVICE).
				path("excluir").path(String.valueOf(codigo));
		Invocation.Builder invocationBuilder = 
				this.webTarget.request("application/json;charset=UTF-8");
		Response response = invocationBuilder.delete();
		
		return response.readEntity(String.class);
		
	}
	
}
